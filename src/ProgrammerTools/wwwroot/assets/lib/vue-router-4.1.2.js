var VueRouter = function (e, t) { "use strict"; const n = "undefined" != typeof window; function o(e) { return e.__esModule || "Module" === e[Symbol.toStringTag] } const r = Object.assign; function a(e, t) { const n = {}; for (const o in t) { const r = t[o]; n[o] = s(r) ? r.map(e) : e(r) } return n } const i = () => { }, s = Array.isArray; function c(e) { const t = Array.from(arguments).slice(1); console.warn.apply(console, ["[Vue Router warn]: " + e].concat(t)) } const l = /\/$/; function u(e, t, n = "/") { let o, r = {}, a = "", i = ""; const s = t.indexOf("#"); let l = t.indexOf("?"); return s < l && s >= 0 && (l = -1), l > -1 && (o = t.slice(0, l), a = t.slice(l + 1, s > -1 ? s : t.length), r = e(a)), s > -1 && (o = o || t.slice(0, s), i = t.slice(s, t.length)), o = function (e, t) { if (e.startsWith("/")) return e; if (!t.startsWith("/")) return c(`Cannot resolve a relative location without an absolute path. Trying to resolve "${e}" from "${t}". It should look like "/${t}".`), e; if (!e) return t; const n = t.split("/"), o = e.split("/"); let r, a, i = n.length - 1; for (r = 0; r < o.length; r++)if (a = o[r], "." !== a) { if (".." !== a) break; i > 1 && i-- } return n.slice(0, i).join("/") + "/" + o.slice(r - (r === o.length ? 1 : 0)).join("/") }(null != o ? o : t, n), { fullPath: o + (a && "?") + a + i, path: o, query: r, hash: i } } function d(e, t) { return t && e.toLowerCase().startsWith(t.toLowerCase()) ? e.slice(t.length) || "/" : e } function f(e, t, n) { const o = t.matched.length - 1, r = n.matched.length - 1; return o > -1 && o === r && h(t.matched[o], n.matched[r]) && p(t.params, n.params) && e(t.query) === e(n.query) && t.hash === n.hash } function h(e, t) { return (e.aliasOf || e) === (t.aliasOf || t) } function p(e, t) { if (Object.keys(e).length !== Object.keys(t).length) return !1; for (const n in e) if (!m(e[n], t[n])) return !1; return !0 } function m(e, t) { return s(e) ? g(e, t) : s(t) ? g(t, e) : e === t } function g(e, t) { return s(t) ? e.length === t.length && e.every(((e, n) => e === t[n])) : 1 === e.length && e[0] === t } var v, y; !function (e) { e.pop = "pop", e.push = "push" }(v || (v = {})), function (e) { e.back = "back", e.forward = "forward", e.unknown = "" }(y || (y = {})); function b(e) { if (!e) if (n) { const t = document.querySelector("base"); e = (e = t && t.getAttribute("href") || "/").replace(/^\w+:\/\/[^\/]+/, "") } else e = "/"; return "/" !== e[0] && "#" !== e[0] && (e = "/" + e), e.replace(l, "") } const w = /^[^#]+#/; function _(e, t) { return e.replace(w, "#") + t } const $ = () => ({ left: window.pageXOffset, top: window.pageYOffset }); function k(e) { let t; if ("el" in e) { const n = e.el, o = "string" == typeof n && n.startsWith("#"); if (!("string" != typeof e.el || o && document.getElementById(e.el.slice(1)))) try { const t = document.querySelector(e.el); if (o && t) return void c(`The selector "${e.el}" should be passed as "el: document.querySelector('${e.el}')" because it starts with "#".`) } catch (t) { return void c(`The selector "${e.el}" is invalid. If you are using an id selector, make sure to escape it. You can find more information about escaping characters in selectors at https://mathiasbynens.be/notes/css-escapes or use CSS.escape (https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape).`) } const r = "string" == typeof n ? o ? document.getElementById(n.slice(1)) : document.querySelector(n) : n; if (!r) return void c(`Couldn't find element using selector "${e.el}" returned by scrollBehavior.`); t = function (e, t) { const n = document.documentElement.getBoundingClientRect(), o = e.getBoundingClientRect(); return { behavior: t.behavior, left: o.left - n.left - (t.left || 0), top: o.top - n.top - (t.top || 0) } }(r, e) } else t = e; "scrollBehavior" in document.documentElement.style ? window.scrollTo(t) : window.scrollTo(null != t.left ? t.left : window.pageXOffset, null != t.top ? t.top : window.pageYOffset) } function E(e, t) { return (history.state ? history.state.position - t : -1) + e } const P = new Map; let C = () => location.protocol + "//" + location.host; function O(e, t) { const { pathname: n, search: o, hash: r } = t, a = e.indexOf("#"); if (a > -1) { let t = r.includes(e.slice(a)) ? e.slice(a).length : 1, n = r.slice(t); return "/" !== n[0] && (n = "/" + n), d(n, "") } return d(n, e) + o + r } function R(e, t, n, o = !1, r = !1) { return { back: e, current: t, forward: n, replaced: o, position: window.history.length, scroll: r ? $() : null } } function x(e) { const t = function (e) { const { history: t, location: n } = window, o = { value: O(e, n) }, a = { value: t.state }; function i(o, r, i) { const s = e.indexOf("#"), l = s > -1 ? (n.host && document.querySelector("base") ? e : e.slice(s)) + o : C() + e + o; try { t[i ? "replaceState" : "pushState"](r, "", l), a.value = r } catch (e) { c("Error with push/replace State", e), n[i ? "replace" : "assign"](l) } } return a.value || i(o.value, { back: null, current: o.value, forward: null, position: t.length - 1, replaced: !0, scroll: null }, !0), { location: o, state: a, push: function (e, n) { const s = r({}, a.value, t.state, { forward: e, scroll: $() }); t.state || c("history.state seems to have been manually replaced without preserving the necessary values. Make sure to preserve existing history state if you are manually calling history.replaceState:\n\nhistory.replaceState(history.state, '', url)\n\nYou can find more information at https://next.router.vuejs.org/guide/migration/#usage-of-history-state."), i(s.current, s, !0), i(e, r({}, R(o.value, e, null), { position: s.position + 1 }, n), !1), o.value = e }, replace: function (e, n) { i(e, r({}, t.state, R(a.value.back, e, a.value.forward, !0), n, { position: a.value.position }), !0), o.value = e } } }(e = b(e)), n = function (e, t, n, o) { let a = [], i = [], s = null; const c = ({ state: r }) => { const i = O(e, location), c = n.value, l = t.value; let u = 0; if (r) { if (n.value = i, t.value = r, s && s === c) return void (s = null); u = l ? r.position - l.position : 0 } else o(i); a.forEach((e => { e(n.value, c, { delta: u, type: v.pop, direction: u ? u > 0 ? y.forward : y.back : y.unknown }) })) }; function l() { const { history: e } = window; e.state && e.replaceState(r({}, e.state, { scroll: $() }), "") } return window.addEventListener("popstate", c), window.addEventListener("beforeunload", l), { pauseListeners: function () { s = n.value }, listen: function (e) { a.push(e); const t = () => { const t = a.indexOf(e); t > -1 && a.splice(t, 1) }; return i.push(t), t }, destroy: function () { for (const e of i) e(); i = [], window.removeEventListener("popstate", c), window.removeEventListener("beforeunload", l) } } }(e, t.state, t.location, t.replace); const o = r({ location: "", base: e, go: function (e, t = !0) { t || n.pauseListeners(), history.go(e) }, createHref: _.bind(null, e) }, t, n); return Object.defineProperty(o, "location", { enumerable: !0, get: () => t.location.value }), Object.defineProperty(o, "state", { enumerable: !0, get: () => t.state.value }), o } function S(e) { return "string" == typeof e || "symbol" == typeof e } const I = { path: "/", name: void 0, params: {}, query: {}, hash: "", fullPath: "/", matched: [], meta: {}, redirectedFrom: void 0 }, A = Symbol("navigation failure"); var j; e.NavigationFailureType = void 0, (j = e.NavigationFailureType || (e.NavigationFailureType = {}))[j.aborted = 4] = "aborted", j[j.cancelled = 8] = "cancelled", j[j.duplicated = 16] = "duplicated"; const T = { 1: ({ location: e, currentLocation: t }) => `No match for\n ${JSON.stringify(e)}${t ? "\nwhile being at\n" + JSON.stringify(t) : ""}`, 2: ({ from: e, to: t }) => `Redirected from "${e.fullPath}" to "${function (e) { if ("string" == typeof e) return e; if ("path" in e) return e.path; const t = {}; for (const n of M) n in e && (t[n] = e[n]); return JSON.stringify(t, null, 2) }(t)}" via a navigation guard.`, 4: ({ from: e, to: t }) => `Navigation aborted from "${e.fullPath}" to "${t.fullPath}" via a navigation guard.`, 8: ({ from: e, to: t }) => `Navigation cancelled from "${e.fullPath}" to "${t.fullPath}" with a new navigation.`, 16: ({ from: e, to: t }) => `Avoided redundant navigation to current location: "${e.fullPath}".` }; function L(e, t) { return r(new Error(T[e](t)), { type: e, [A]: !0 }, t) } function N(e, t) { return e instanceof Error && A in e && (null == t || !!(e.type & t)) } const M = ["params", "query", "hash"]; const U = "[^/]+?", D = { sensitive: !1, strict: !1, start: !0, end: !0 }, V = /[.+*?^${}()[\]/\\]/g; function B(e, t) { let n = 0; for (; n < e.length && n < t.length;) { const o = t[n] - e[n]; if (o) return o; n++ } return e.length < t.length ? 1 === e.length && 80 === e[0] ? -1 : 1 : e.length > t.length ? 1 === t.length && 80 === t[0] ? 1 : -1 : 0 } function W(e, t) { let n = 0; const o = e.score, r = t.score; for (; n < o.length && n < r.length;) { const e = B(o[n], r[n]); if (e) return e; n++ } if (1 === Math.abs(r.length - o.length)) { if (q(o)) return 1; if (q(r)) return -1 } return r.length - o.length } function q(e) { const t = e[e.length - 1]; return e.length > 0 && t[t.length - 1] < 0 } const G = { type: 0, value: "" }, F = /[a-zA-Z0-9_]/; function K(e, t, n) { const o = function (e, t) { const n = r({}, D, t), o = []; let a = n.start ? "^" : ""; const i = []; for (const t of e) { const e = t.length ? [] : [90]; n.strict && !t.length && (a += "/"); for (let o = 0; o < t.length; o++) { const r = t[o]; let s = 40 + (n.sensitive ? .25 : 0); if (0 === r.type) o || (a += "/"), a += r.value.replace(V, "\\$&"), s += 40; else if (1 === r.type) { const { value: e, repeatable: n, optional: c, regexp: l } = r; i.push({ name: e, repeatable: n, optional: c }); const u = l || U; if (u !== U) { s += 10; try { new RegExp(`(${u})`) } catch (t) { throw new Error(`Invalid custom RegExp for param "${e}" (${u}): ` + t.message) } } let d = n ? `((?:${u})(?:/(?:${u}))*)` : `(${u})`; o || (d = c && t.length < 2 ? `(?:/${d})` : "/" + d), c && (d += "?"), a += d, s += 20, c && (s += -8), n && (s += -20), ".*" === u && (s += -50) } e.push(s) } o.push(e) } if (n.strict && n.end) { const e = o.length - 1; o[e][o[e].length - 1] += .7000000000000001 } n.strict || (a += "/?"), n.end ? a += "$" : n.strict && (a += "(?:/|$)"); const c = new RegExp(a, n.sensitive ? "" : "i"); return { re: c, score: o, keys: i, parse: function (e) { const t = e.match(c), n = {}; if (!t) return null; for (let e = 1; e < t.length; e++) { const o = t[e] || "", r = i[e - 1]; n[r.name] = o && r.repeatable ? o.split("/") : o } return n }, stringify: function (t) { let n = "", o = !1; for (const r of e) { o && n.endsWith("/") || (n += "/"), o = !1; for (const a of r) if (0 === a.type) n += a.value; else if (1 === a.type) { const { value: i, repeatable: c, optional: l } = a, u = i in t ? t[i] : ""; if (s(u) && !c) throw new Error(`Provided param "${i}" is an array but it is not repeatable (* or + modifiers)`); const d = s(u) ? u.join("/") : u; if (!d) { if (!l) throw new Error(`Missing required param "${i}"`); r.length < 2 && e.length > 1 && (n.endsWith("/") ? n = n.slice(0, -1) : o = !0) } n += d } } return n } } }(function (e) { if (!e) return [[]]; if ("/" === e) return [[G]]; if (!e.startsWith("/")) throw new Error(`Route paths should start with a "/": "${e}" should be "/${e}".`); function t(e) { throw new Error(`ERR (${n})/"${l}": ${e}`) } let n = 0, o = n; const r = []; let a; function i() { a && r.push(a), a = [] } let s, c = 0, l = "", u = ""; function d() { l && (0 === n ? a.push({ type: 0, value: l }) : 1 === n || 2 === n || 3 === n ? (a.length > 1 && ("*" === s || "+" === s) && t(`A repeatable param (${l}) must be alone in its segment. eg: '/:ids+.`), a.push({ type: 1, value: l, regexp: u, repeatable: "*" === s || "+" === s, optional: "*" === s || "?" === s })) : t("Invalid state to consume buffer"), l = "") } function f() { l += s } for (; c < e.length;)if (s = e[c++], "\\" !== s || 2 === n) switch (n) { case 0: "/" === s ? (l && d(), i()) : ":" === s ? (d(), n = 1) : f(); break; case 4: f(), n = o; break; case 1: "(" === s ? n = 2 : F.test(s) ? f() : (d(), n = 0, "*" !== s && "?" !== s && "+" !== s && c--); break; case 2: ")" === s ? "\\" == u[u.length - 1] ? u = u.slice(0, -1) + s : n = 3 : u += s; break; case 3: d(), n = 0, "*" !== s && "?" !== s && "+" !== s && c--, u = ""; break; default: t("Unknown state") } else o = n, n = 4; return 2 === n && t(`Unfinished custom RegExp for param "${l}"`), d(), i(), r }(e.path), n); { const t = new Set; for (const n of o.keys) t.has(n.name) && c(`Found duplicated params with name "${n.name}" for path "${e.path}". Only the last one will be available on "$route.params".`), t.add(n.name) } const a = r(o, { record: e, parent: t, children: [], alias: [] }); return t && !a.record.aliasOf == !t.record.aliasOf && t.children.push(a), a } function Q(e, t) { const n = [], o = new Map; function a(e, n, o) { const u = !o, d = function (e) { return { path: e.path, redirect: e.redirect, name: e.name, meta: e.meta || {}, aliasOf: void 0, beforeEnter: e.beforeEnter, props: H(e), children: e.children || [], instances: {}, leaveGuards: new Set, updateGuards: new Set, enterCallbacks: {}, components: "components" in e ? e.components || null : e.component && { default: e.component } } }(e); !function (e, t) { t && t.record.name && !e.name && !e.path && c(`The route named "${String(t.record.name)}" has a child without a name and an empty path. Using that name won't render the empty path child so you probably want to move the name to the child instead. If this is intentional, add a name to the child route to remove the warning.`) }(d, n), d.aliasOf = o && o.record; const f = Y(t, e), h = [d]; if ("alias" in e) { const t = "string" == typeof e.alias ? [e.alias] : e.alias; for (const e of t) h.push(r({}, d, { components: o ? o.record.components : d.components, path: e, aliasOf: o ? o.record : d })) } let p, m; for (const t of h) { const { path: r } = t; if (n && "/" !== r[0]) { const e = n.record.path, o = "/" === e[e.length - 1] ? "" : "/"; t.path = n.record.path + (r && o + r) } if ("*" === t.path) throw new Error('Catch all routes ("*") must now be defined using a param with a custom regexp.\nSee more at https://next.router.vuejs.org/guide/migration/#removed-star-or-catch-all-routes.'); if (p = K(t, n, f), n && "/" === r[0] && ee(p, n), o ? (o.alias.push(p), Z(o, p)) : (m = m || p, m !== p && m.alias.push(p), u && e.name && !z(p) && s(e.name)), d.children) { const e = d.children; for (let t = 0; t < e.length; t++)a(e[t], p, o && o.children[t]) } o = o || p, l(p) } return m ? () => { s(m) } : i } function s(e) { if (S(e)) { const t = o.get(e); t && (o.delete(e), n.splice(n.indexOf(t), 1), t.children.forEach(s), t.alias.forEach(s)) } else { const t = n.indexOf(e); t > -1 && (n.splice(t, 1), e.record.name && o.delete(e.record.name), e.children.forEach(s), e.alias.forEach(s)) } } function l(e) { let t = 0; for (; t < n.length && W(e, n[t]) >= 0 && (e.record.path !== n[t].record.path || !te(e, n[t]));)t++; n.splice(t, 0, e), e.record.name && !z(e) && o.set(e.record.name, e) } return t = Y({ strict: !1, end: !0, sensitive: !1 }, t), e.forEach((e => a(e))), { addRoute: a, resolve: function (e, t) { let a, i, s, l = {}; if ("name" in e && e.name) { if (a = o.get(e.name), !a) throw L(1, { location: e }); s = a.record.name, l = r(function (e, t) { const n = {}; for (const o of t) o in e && (n[o] = e[o]); return n }(t.params, a.keys.filter((e => !e.optional)).map((e => e.name))), e.params), i = a.stringify(l) } else if ("path" in e) i = e.path, i.startsWith("/") || c(`The Matcher cannot resolve relative paths but received "${i}". Unless you directly called \`matcher.resolve("${i}")\`, this is probably a bug in vue-router. Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/router.`), a = n.find((e => e.re.test(i))), a && (l = a.parse(i), s = a.record.name); else { if (a = t.name ? o.get(t.name) : n.find((e => e.re.test(t.path))), !a) throw L(1, { location: e, currentLocation: t }); s = a.record.name, l = r({}, t.params, e.params), i = a.stringify(l) } const u = []; let d = a; for (; d;)u.unshift(d.record), d = d.parent; return { name: s, path: i, params: l, matched: u, meta: J(u) } }, removeRoute: s, getRoutes: function () { return n }, getRecordMatcher: function (e) { return o.get(e) } } } function H(e) { const t = {}, n = e.props || !1; if ("component" in e) t.default = n; else for (const o in e.components) t[o] = "boolean" == typeof n ? n : n[o]; return t } function z(e) { for (; e;) { if (e.record.aliasOf) return !0; e = e.parent } return !1 } function J(e) { return e.reduce(((e, t) => r(e, t.meta)), {}) } function Y(e, t) { const n = {}; for (const o in e) n[o] = o in t ? t[o] : e[o]; return n } function X(e, t) { return e.name === t.name && e.optional === t.optional && e.repeatable === t.repeatable } function Z(e, t) { for (const n of e.keys) if (!n.optional && !t.keys.find(X.bind(null, n))) return c(`Alias "${t.record.path}" and the original record: "${e.record.path}" should have the exact same param named "${n.name}"`); for (const n of t.keys) if (!n.optional && !e.keys.find(X.bind(null, n))) return c(`Alias "${t.record.path}" and the original record: "${e.record.path}" should have the exact same param named "${n.name}"`) } function ee(e, t) { for (const n of t.keys) if (!e.keys.find(X.bind(null, n))) return c(`Absolute path "${e.record.path}" should have the exact same param named "${n.name}" as its parent "${t.record.path}".`) } function te(e, t) { return t.children.some((t => t === e || te(e, t))) } const ne = /#/g, oe = /&/g, re = /\//g, ae = /=/g, ie = /\?/g, se = /\+/g, ce = /%5B/g, le = /%5D/g, ue = /%5E/g, de = /%60/g, fe = /%7B/g, he = /%7C/g, pe = /%7D/g, me = /%20/g; function ge(e) { return encodeURI("" + e).replace(he, "|").replace(ce, "[").replace(le, "]") } function ve(e) { return ge(e).replace(se, "%2B").replace(me, "+").replace(ne, "%23").replace(oe, "%26").replace(de, "`").replace(fe, "{").replace(pe, "}").replace(ue, "^") } function ye(e) { return null == e ? "" : function (e) { return ge(e).replace(ne, "%23").replace(ie, "%3F") }(e).replace(re, "%2F") } function be(e) { try { return decodeURIComponent("" + e) } catch (t) { c(`Error decoding "${e}". Using original value`) } return "" + e } function we(e) { const t = {}; if ("" === e || "?" === e) return t; const n = ("?" === e[0] ? e.slice(1) : e).split("&"); for (let e = 0; e < n.length; ++e) { const o = n[e].replace(se, " "), r = o.indexOf("="), a = be(r < 0 ? o : o.slice(0, r)), i = r < 0 ? null : be(o.slice(r + 1)); if (a in t) { let e = t[a]; s(e) || (e = t[a] = [e]), e.push(i) } else t[a] = i } return t } function _e(e) { let t = ""; for (let n in e) { const o = e[n]; if (n = ve(n).replace(ae, "%3D"), null == o) { void 0 !== o && (t += (t.length ? "&" : "") + n); continue } (s(o) ? o.map((e => e && ve(e))) : [o && ve(o)]).forEach((e => { void 0 !== e && (t += (t.length ? "&" : "") + n, null != e && (t += "=" + e)) })) } return t } function $e(e) { const t = {}; for (const n in e) { const o = e[n]; void 0 !== o && (t[n] = s(o) ? o.map((e => null == e ? null : "" + e)) : null == o ? o : "" + o) } return t } const ke = Symbol("router view location matched"), Ee = Symbol("router view depth"), Pe = Symbol("router"), Ce = Symbol("route location"), Oe = Symbol("router view location"); function Re() { let e = []; return { add: function (t) { return e.push(t), () => { const n = e.indexOf(t); n > -1 && e.splice(n, 1) } }, list: () => e, reset: function () { e = [] } } } function xe(e, n, o) { const r = () => { e[n].delete(o) }; t.onUnmounted(r), t.onDeactivated(r), t.onActivated((() => { e[n].add(o) })), e[n].add(o) } function Se(e, t, n, o, r) { const a = o && (o.enterCallbacks[r] = o.enterCallbacks[r] || []); return () => new Promise(((i, s) => { const l = e => { var c; !1 === e ? s(L(4, { from: n, to: t })) : e instanceof Error ? s(e) : "string" == typeof (c = e) || c && "object" == typeof c ? s(L(2, { from: t, to: e })) : (a && o.enterCallbacks[r] === a && "function" == typeof e && a.push(e), i()) }, u = e.call(o && o.instances[r], t, n, function (e, t, n) { let o = 0; return function () { 1 == o++ && c(`The "next" callback was called more than once in one navigation guard when going from "${n.fullPath}" to "${t.fullPath}". It should be called exactly one time in each navigation guard. This will fail in production.`), e._called = !0, 1 === o && e.apply(null, arguments) } }(l, t, n)); let d = Promise.resolve(u); if (e.length < 3 && (d = d.then(l)), e.length > 2) { const t = `The "next" callback was never called inside of ${e.name ? '"' + e.name + '"' : ""}:\n${e.toString()}\n. If you are returning a value instead of calling "next", make sure to remove the "next" parameter from your function.`; if ("object" == typeof u && "then" in u) d = d.then((e => l._called ? e : (c(t), Promise.reject(new Error("Invalid navigation guard"))))); else if (void 0 !== u && !l._called) return c(t), void s(new Error("Invalid navigation guard")) } d.catch((e => s(e))) })) } function Ie(e, t, n, r) { const a = []; for (const s of e) { s.components || s.children.length || c(`Record with path "${s.path}" is either missing a "component(s)" or "children" property.`); for (const e in s.components) { let l = s.components[e]; if (!l || "object" != typeof l && "function" != typeof l) throw c(`Component "${e}" in record with path "${s.path}" is not a valid component. Received "${String(l)}".`), new Error("Invalid route component"); if ("then" in l) { c(`Component "${e}" in record with path "${s.path}" is a Promise instead of a function that returns a Promise. Did you write "import('./MyPage.vue')" instead of "() => import('./MyPage.vue')" ? This will break in production if not fixed.`); const t = l; l = () => t } else l.__asyncLoader && !l.__warnedDefineAsync && (l.__warnedDefineAsync = !0, c(`Component "${e}" in record with path "${s.path}" is defined using "defineAsyncComponent()". Write "() => import('./MyPage.vue')" instead of "defineAsyncComponent(() => import('./MyPage.vue'))".`)); if ("beforeRouteEnter" === t || s.instances[e]) if ("object" == typeof (i = l) || "displayName" in i || "props" in i || "__vccOpts" in i) { const o = (l.__vccOpts || l)[t]; o && a.push(Se(o, n, r, s, e)) } else { let i = l(); "catch" in i || (c(`Component "${e}" in record with path "${s.path}" is a function that does not return a Promise. If you were passing a functional component, make sure to add a "displayName" to the component. This will break in production if not fixed.`), i = Promise.resolve(i)), a.push((() => i.then((a => { if (!a) return Promise.reject(new Error(`Couldn't resolve component "${e}" at "${s.path}"`)); const i = o(a) ? a.default : a; s.components[e] = i; const c = (i.__vccOpts || i)[t]; return c && Se(c, n, r, s, e)() })))) } } } var i; return a } function Ae(e) { const o = t.inject(Pe), r = t.inject(Ce), a = t.computed((() => o.resolve(t.unref(e.to)))), c = t.computed((() => { const { matched: e } = a.value, { length: t } = e, n = e[t - 1], o = r.matched; if (!n || !o.length) return -1; const i = o.findIndex(h.bind(null, n)); if (i > -1) return i; const s = Te(e[t - 2]); return t > 1 && Te(n) === s && o[o.length - 1].path !== s ? o.findIndex(h.bind(null, e[t - 2])) : i })), l = t.computed((() => c.value > -1 && function (e, t) { for (const n in t) { const o = t[n], r = e[n]; if ("string" == typeof o) { if (o !== r) return !1 } else if (!s(r) || r.length !== o.length || o.some(((e, t) => e !== r[t]))) return !1 } return !0 }(r.params, a.value.params))), u = t.computed((() => c.value > -1 && c.value === r.matched.length - 1 && p(r.params, a.value.params))); if (n) { const e = t.getCurrentInstance(); if (e) { const n = { route: a.value, isActive: l.value, isExactActive: u.value }; e.__vrl_devtools = e.__vrl_devtools || [], e.__vrl_devtools.push(n), t.watchEffect((() => { n.route = a.value, n.isActive = l.value, n.isExactActive = u.value }), { flush: "post" }) } } return { route: a, href: t.computed((() => a.value.href)), isActive: l, isExactActive: u, navigate: function (n = {}) { return function (e) { if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) return; if (e.defaultPrevented) return; if (void 0 !== e.button && 0 !== e.button) return; if (e.currentTarget && e.currentTarget.getAttribute) { const t = e.currentTarget.getAttribute("target"); if (/\b_blank\b/i.test(t)) return } e.preventDefault && e.preventDefault(); return !0 }(n) ? o[t.unref(e.replace) ? "replace" : "push"](t.unref(e.to)).catch(i) : Promise.resolve() } } } const je = t.defineComponent({ name: "RouterLink", compatConfig: { MODE: 3 }, props: { to: { type: [String, Object], required: !0 }, replace: Boolean, activeClass: String, exactActiveClass: String, custom: Boolean, ariaCurrentValue: { type: String, default: "page" } }, useLink: Ae, setup(e, { slots: n }) { const o = t.reactive(Ae(e)), { options: r } = t.inject(Pe), a = t.computed((() => ({ [Le(e.activeClass, r.linkActiveClass, "router-link-active")]: o.isActive, [Le(e.exactActiveClass, r.linkExactActiveClass, "router-link-exact-active")]: o.isExactActive }))); return () => { const r = n.default && n.default(o); return e.custom ? r : t.h("a", { "aria-current": o.isExactActive ? e.ariaCurrentValue : null, href: o.href, onClick: o.navigate, class: a.value }, r) } } }); function Te(e) { return e ? e.aliasOf ? e.aliasOf.path : e.path : "" } const Le = (e, t, n) => null != e ? e : null != t ? t : n; function Ne(e, t) { if (!e) return null; const n = e(t); return 1 === n.length ? n[0] : n } const Me = t.defineComponent({ name: "RouterView", inheritAttrs: !1, props: { name: { type: String, default: "default" }, route: Object }, compatConfig: { MODE: 3 }, setup(e, { attrs: o, slots: a }) { !function () { const e = t.getCurrentInstance(), n = e.parent && e.parent.type.name; if (n && ("KeepAlive" === n || n.includes("Transition"))) { const e = "KeepAlive" === n ? "keep-alive" : "transition"; c(`<router-view> can no longer be used directly inside <transition> or <keep-alive>.\nUse slot props instead:\n\n<router-view v-slot="{ Component }">\n  <${e}>\n    <component :is="Component" />\n  </${e}>\n</router-view>`) } }(); const i = t.inject(Oe), l = t.computed((() => e.route || i.value)), u = t.inject(Ee, 0), d = t.computed((() => { let e = t.unref(u); const { matched: n } = l.value; let o; for (; (o = n[e]) && !o.components;)e++; return e })), f = t.computed((() => l.value.matched[d.value])); t.provide(Ee, t.computed((() => d.value + 1))), t.provide(ke, f), t.provide(Oe, l); const p = t.ref(); return t.watch((() => [p.value, f.value, e.name]), (([e, t, n], [o, r, a]) => { t && (t.instances[n] = e, r && r !== t && e && e === o && (t.leaveGuards.size || (t.leaveGuards = r.leaveGuards), t.updateGuards.size || (t.updateGuards = r.updateGuards))), !e || !t || r && h(t, r) && o || (t.enterCallbacks[n] || []).forEach((t => t(e))) }), { flush: "post" }), () => { const i = l.value, c = f.value, u = c && c.components[e.name], h = e.name; if (!u) return Ne(a.default, { Component: u, route: i }); const m = c.props[e.name], g = m ? !0 === m ? i.params : "function" == typeof m ? m(i) : m : null, v = t.h(u, r({}, g, o, { onVnodeUnmounted: e => { e.component.isUnmounted && (c.instances[h] = null) }, ref: p })); if (n && v.ref) { const e = { depth: d.value, name: c.name, path: c.path, meta: c.meta }; (s(v.ref) ? v.ref.map((e => e.i)) : [v.ref.i]).forEach((t => { t.__vrv_devtools = e })) } return Ne(a.default, { Component: v, route: i }) || v } } }); function Ue() { return "undefined" != typeof navigator && "undefined" != typeof window ? window : "undefined" != typeof global ? global : {} } const De = "function" == typeof Proxy; let Ve, Be; function We() { return void 0 !== Ve || ("undefined" != typeof window && window.performance ? (Ve = !0, Be = window.performance) : "undefined" != typeof global && (null === (e = global.perf_hooks) || void 0 === e ? void 0 : e.performance) ? (Ve = !0, Be = global.perf_hooks.performance) : Ve = !1), Ve ? Be.now() : Date.now(); var e } class qe { constructor(e, t) { this.target = null, this.targetQueue = [], this.onQueue = [], this.plugin = e, this.hook = t; const n = {}; if (e.settings) for (const t in e.settings) { const o = e.settings[t]; n[t] = o.defaultValue } const o = `__vue-devtools-plugin-settings__${e.id}`; let r = Object.assign({}, n); try { const e = localStorage.getItem(o), t = JSON.parse(e); Object.assign(r, t) } catch (e) { } this.fallbacks = { getSettings: () => r, setSettings(e) { try { localStorage.setItem(o, JSON.stringify(e)) } catch (e) { } r = e }, now: () => We() }, t && t.on("plugin:settings:set", ((e, t) => { e === this.plugin.id && this.fallbacks.setSettings(t) })), this.proxiedOn = new Proxy({}, { get: (e, t) => this.target ? this.target.on[t] : (...e) => { this.onQueue.push({ method: t, args: e }) } }), this.proxiedTarget = new Proxy({}, { get: (e, t) => this.target ? this.target[t] : "on" === t ? this.proxiedOn : Object.keys(this.fallbacks).includes(t) ? (...e) => (this.targetQueue.push({ method: t, args: e, resolve: () => { } }), this.fallbacks[t](...e)) : (...e) => new Promise((n => { this.targetQueue.push({ method: t, args: e, resolve: n }) })) }) } async setRealTarget(e) { this.target = e; for (const e of this.onQueue) this.target.on[e.method](...e.args); for (const e of this.targetQueue) e.resolve(await this.target[e.method](...e.args)) } } function Ge(e, t) { const n = e, o = Ue(), r = Ue().__VUE_DEVTOOLS_GLOBAL_HOOK__, a = De && n.enableEarlyProxy; if (!r || !o.__VUE_DEVTOOLS_PLUGIN_API_AVAILABLE__ && a) { const e = a ? new qe(n, r) : null; (o.__VUE_DEVTOOLS_PLUGINS__ = o.__VUE_DEVTOOLS_PLUGINS__ || []).push({ pluginDescriptor: n, setupFn: t, proxy: e }), e && t(e.proxiedTarget) } else r.emit("devtools-plugin:setup", e, t) } function Fe(e, t) { const n = r({}, e, { matched: e.matched.map((e => function (e, t) { const n = {}; for (const o in e) t.includes(o) || (n[o] = e[o]); return n }(e, ["instances", "children", "aliasOf"]))) }); return { _custom: { type: null, readOnly: !0, display: e.fullPath, tooltip: t, value: n } } } function Ke(e) { return { _custom: { display: e } } } let Qe = 0; function He(e, n, o) { if (n.__hasDevtools) return; n.__hasDevtools = !0; const r = Qe++; Ge({ id: "org.vuejs.router" + (r ? "." + r : ""), label: "Vue Router", packageName: "vue-router", homepage: "https://router.vuejs.org", logo: "https://router.vuejs.org/logo.png", componentStateTypes: ["Routing"], app: e }, (a => { "function" != typeof a.now && console.warn("[Vue Router]: You seem to be using an outdated version of Vue Devtools. Are you still using the Beta release instead of the stable one? You can find the links at https://devtools.vuejs.org/guide/installation.html."), a.on.inspectComponent(((e, t) => { e.instanceData && e.instanceData.state.push({ type: "Routing", key: "$route", editable: !1, value: Fe(n.currentRoute.value, "Current Route") }) })), a.on.visitComponentTree((({ treeNode: e, componentInstance: t }) => { if (t.__vrv_devtools) { const n = t.__vrv_devtools; e.tags.push({ label: (n.name ? `${n.name.toString()}: ` : "") + n.path, textColor: 0, tooltip: "This component is rendered by &lt;router-view&gt;", backgroundColor: Je }) } s(t.__vrl_devtools) && (t.__devtoolsApi = a, t.__vrl_devtools.forEach((t => { let n = Ze, o = ""; t.isExactActive ? (n = Xe, o = "This is exactly active") : t.isActive && (n = Ye, o = "This link is active"), e.tags.push({ label: t.route.path, textColor: 0, tooltip: o, backgroundColor: n }) }))) })), t.watch(n.currentRoute, (() => { u(), a.notifyComponentUpdate(), a.sendInspectorTree(l), a.sendInspectorState(l) })); const i = "router:navigations:" + r; a.addTimelineLayer({ id: i, label: `Router${r ? " " + r : ""} Navigations`, color: 4237508 }), n.onError(((e, t) => { a.addTimelineEvent({ layerId: i, event: { title: "Error during Navigation", subtitle: t.fullPath, logType: "error", time: a.now(), data: { error: e }, groupId: t.meta.__navigationId } }) })); let c = 0; n.beforeEach(((e, t) => { const n = { guard: Ke("beforeEach"), from: Fe(t, "Current Location during this navigation"), to: Fe(e, "Target location") }; Object.defineProperty(e.meta, "__navigationId", { value: c++ }), a.addTimelineEvent({ layerId: i, event: { time: a.now(), title: "Start of navigation", subtitle: e.fullPath, data: n, groupId: e.meta.__navigationId } }) })), n.afterEach(((e, t, n) => { const o = { guard: Ke("afterEach") }; n ? (o.failure = { _custom: { type: Error, readOnly: !0, display: n ? n.message : "", tooltip: "Navigation Failure", value: n } }, o.status = Ke("❌")) : o.status = Ke("✅"), o.from = Fe(t, "Current Location during this navigation"), o.to = Fe(e, "Target location"), a.addTimelineEvent({ layerId: i, event: { title: "End of navigation", subtitle: e.fullPath, time: a.now(), data: o, logType: n ? "warning" : "default", groupId: e.meta.__navigationId } }) })); const l = "router-inspector:" + r; function u() { if (!d) return; const e = d; let t = o.getRoutes().filter((e => !e.parent)); t.forEach(rt), e.filter && (t = t.filter((t => at(t, e.filter.toLowerCase())))), t.forEach((e => ot(e, n.currentRoute.value))), e.rootNodes = t.map(et) } let d; a.addInspector({ id: l, label: "Routes" + (r ? " " + r : ""), icon: "book", treeFilterPlaceholder: "Search routes" }), a.on.getInspectorTree((t => { d = t, t.app === e && t.inspectorId === l && u() })), a.on.getInspectorState((t => { if (t.app === e && t.inspectorId === l) { const e = o.getRoutes().find((e => e.record.__vd_id === t.nodeId)); e && (t.state = { options: ze(e) }) } })), a.sendInspectorTree(l), a.sendInspectorState(l) })) } function ze(e) { const { record: t } = e, n = [{ editable: !1, key: "path", value: t.path }]; return null != t.name && n.push({ editable: !1, key: "name", value: t.name }), n.push({ editable: !1, key: "regexp", value: e.re }), e.keys.length && n.push({ editable: !1, key: "keys", value: { _custom: { type: null, readOnly: !0, display: e.keys.map((e => `${e.name}${function (e) { return e.optional ? e.repeatable ? "*" : "?" : e.repeatable ? "+" : "" }(e)}`)).join(" "), tooltip: "Param keys", value: e.keys } } }), null != t.redirect && n.push({ editable: !1, key: "redirect", value: t.redirect }), e.alias.length && n.push({ editable: !1, key: "aliases", value: e.alias.map((e => e.record.path)) }), Object.keys(e.record.meta).length && n.push({ editable: !1, key: "meta", value: e.record.meta }), n.push({ key: "score", editable: !1, value: { _custom: { type: null, readOnly: !0, display: e.score.map((e => e.join(", "))).join(" | "), tooltip: "Score used to sort routes", value: e.score } } }), n } const Je = 15485081, Ye = 2450411, Xe = 8702998, Ze = 16486972; function et(e) { const t = [], { record: n } = e; null != n.name && t.push({ label: String(n.name), textColor: 0, backgroundColor: 2282478 }), n.aliasOf && t.push({ label: "alias", textColor: 0, backgroundColor: Ze }), e.__vd_match && t.push({ label: "matches", textColor: 0, backgroundColor: Je }), e.__vd_exactActive && t.push({ label: "exact", textColor: 0, backgroundColor: Xe }), e.__vd_active && t.push({ label: "active", textColor: 0, backgroundColor: Ye }), n.redirect && t.push({ label: "string" == typeof n.redirect ? `redirect: ${n.redirect}` : "redirects", textColor: 16777215, backgroundColor: 6710886 }); let o = n.__vd_id; return null == o && (o = String(tt++), n.__vd_id = o), { id: o, label: n.path, tags: t, children: e.children.map(et) } } let tt = 0; const nt = /^\/(.*)\/([a-z]*)$/; function ot(e, t) { const n = t.matched.length && h(t.matched[t.matched.length - 1], e.record); e.__vd_exactActive = e.__vd_active = n, n || (e.__vd_active = t.matched.some((t => h(t, e.record)))), e.children.forEach((e => ot(e, t))) } function rt(e) { e.__vd_match = !1, e.children.forEach(rt) } function at(e, t) { const n = String(e.re).match(nt); if (e.__vd_match = !1, !n || n.length < 3) return !1; if (new RegExp(n[1].replace(/\$$/, ""), n[2]).test(t)) return e.children.forEach((e => at(e, t))), ("/" !== e.record.path || "/" === t) && (e.__vd_match = e.re.test(t), !0); const o = e.record.path.toLowerCase(), r = be(o); return !(t.startsWith("/") || !r.includes(t) && !o.includes(t)) || (!(!r.startsWith(t) && !o.startsWith(t)) || (!(!e.record.name || !String(e.record.name).includes(t)) || e.children.some((e => at(e, t))))) } function it(e) { return e.reduce(((e, t) => e.then((() => t()))), Promise.resolve()) } return e.RouterLink = je, e.RouterView = Me, e.START_LOCATION = I, e.createMemoryHistory = function (e = "") { let t = [], n = [""], o = 0; function r(e) { o++, o === n.length || n.splice(o), n.push(e) } const a = { location: "", state: {}, base: e = b(e), createHref: _.bind(null, e), replace(e) { n.splice(o--, 1), r(e) }, push(e, t) { r(e) }, listen: e => (t.push(e), () => { const n = t.indexOf(e); n > -1 && t.splice(n, 1) }), destroy() { t = [], n = [""], o = 0 }, go(e, r = !0) { const a = this.location, i = e < 0 ? y.back : y.forward; o = Math.max(0, Math.min(o + e, n.length - 1)), r && function (e, n, { direction: o, delta: r }) { const a = { direction: o, delta: r, type: v.pop }; for (const o of t) o(e, n, a) }(this.location, a, { direction: i, delta: e }) } }; return Object.defineProperty(a, "location", { enumerable: !0, get: () => n[o] }), a }, e.createRouter = function (e) { const o = Q(e.routes, e), l = e.parseQuery || we, d = e.stringifyQuery || _e, p = e.history; if (!p) throw new Error('Provide the "history" option when calling "createRouter()": https://next.router.vuejs.org/api/#history.'); const m = Re(), g = Re(), y = Re(), b = t.shallowRef(I); let w = I; n && e.scrollBehavior && "scrollRestoration" in history && (history.scrollRestoration = "manual"); const _ = a.bind(null, (e => "" + e)), C = a.bind(null, ye), O = a.bind(null, be); function R(e, t) { if (t = r({}, t || b.value), "string" == typeof e) { const n = u(l, e, t.path), a = o.resolve({ path: n.path }, t), i = p.createHref(n.fullPath); return i.startsWith("//") ? c(`Location "${e}" resolved to "${i}". A resolved location cannot start with multiple slashes.`) : a.matched.length || c(`No match found for location with path "${e}"`), r(n, a, { params: O(a.params), hash: be(n.hash), redirectedFrom: void 0, href: i }) } let n; if ("path" in e) "params" in e && !("name" in e) && Object.keys(e.params).length && c(`Path "${e.path}" was passed with params but they will be ignored. Use a named route alongside params instead.`), n = r({}, e, { path: u(l, e.path, t.path).path }); else { const o = r({}, e.params); for (const e in o) null == o[e] && delete o[e]; n = r({}, e, { params: C(e.params) }), t.params = C(t.params) } const a = o.resolve(n, t), i = e.hash || ""; i && !i.startsWith("#") && c(`A \`hash\` should always start with the character "#". Replace "${i}" with "#${i}".`), a.params = _(O(a.params)); const s = function (e, t) { const n = t.query ? e(t.query) : ""; return t.path + (n && "?") + n + (t.hash || "") }(d, r({}, e, { hash: (f = i, ge(f).replace(fe, "{").replace(pe, "}").replace(ue, "^")), path: a.path })); var f; const h = p.createHref(s); return h.startsWith("//") ? c(`Location "${e}" resolved to "${h}". A resolved location cannot start with multiple slashes.`) : a.matched.length || c(`No match found for location with path "${"path" in e ? e.path : e}"`), r({ fullPath: s, hash: i, query: d === _e ? $e(e.query) : e.query || {} }, a, { redirectedFrom: void 0, href: h }) } function x(e) { return "string" == typeof e ? u(l, e, b.value.path) : r({}, e) } function A(e, t) { if (w !== e) return L(8, { from: t, to: e }) } function j(e) { return M(e) } function T(e) { const t = e.matched[e.matched.length - 1]; if (t && t.redirect) { const { redirect: n } = t; let o = "function" == typeof n ? n(e) : n; if ("string" == typeof o && (o = o.includes("?") || o.includes("#") ? o = x(o) : { path: o }, o.params = {}), !("path" in o) && !("name" in o)) throw c(`Invalid redirect found:\n${JSON.stringify(o, null, 2)}\n when navigating to "${e.fullPath}". A redirect must contain a name or path. This will break in production.`), new Error("Invalid redirect"); return r({ query: e.query, hash: e.hash, params: "path" in o ? {} : e.params }, o) } } function M(e, t) { const n = w = R(e), o = b.value, a = e.state, i = e.force, s = !0 === e.replace, l = T(n); if (l) return M(r(x(l), { state: a, force: i, replace: s }), t || n); const u = n; let h; return u.redirectedFrom = t, !i && f(d, o, n) && (h = L(16, { to: u, from: o }), J(o, o, !0, !1)), (h ? Promise.resolve(h) : D(u, o)).catch((e => N(e) ? N(e, 2) ? e : z(e) : H(e, u, o))).then((e => { if (e) { if (N(e, 2)) return f(d, R(e.to), u) && t && (t._count = t._count ? t._count + 1 : 1) > 10 ? (c(`Detected an infinite redirection in a navigation guard when going from "${o.fullPath}" to "${u.fullPath}". Aborting to avoid a Stack Overflow. This will break in production if not fixed.`), Promise.reject(new Error("Infinite redirect in navigation guard"))) : M(r(x(e.to), { state: a, force: i, replace: s }), t || u) } else e = B(u, o, !0, s, a); return V(u, o, e), e })) } function U(e, t) { const n = A(e, t); return n ? Promise.reject(n) : Promise.resolve() } function D(e, t) { let n; const [o, r, a] = function (e, t) { const n = [], o = [], r = [], a = Math.max(t.matched.length, e.matched.length); for (let i = 0; i < a; i++) { const a = t.matched[i]; a && (e.matched.find((e => h(e, a))) ? o.push(a) : n.push(a)); const s = e.matched[i]; s && (t.matched.find((e => h(e, s))) || r.push(s)) } return [n, o, r] }(e, t); n = Ie(o.reverse(), "beforeRouteLeave", e, t); for (const r of o) r.leaveGuards.forEach((o => { n.push(Se(o, e, t)) })); const i = U.bind(null, e, t); return n.push(i), it(n).then((() => { n = []; for (const o of m.list()) n.push(Se(o, e, t)); return n.push(i), it(n) })).then((() => { n = Ie(r, "beforeRouteUpdate", e, t); for (const o of r) o.updateGuards.forEach((o => { n.push(Se(o, e, t)) })); return n.push(i), it(n) })).then((() => { n = []; for (const o of e.matched) if (o.beforeEnter && !t.matched.includes(o)) if (s(o.beforeEnter)) for (const r of o.beforeEnter) n.push(Se(r, e, t)); else n.push(Se(o.beforeEnter, e, t)); return n.push(i), it(n) })).then((() => (e.matched.forEach((e => e.enterCallbacks = {})), n = Ie(a, "beforeRouteEnter", e, t), n.push(i), it(n)))).then((() => { n = []; for (const o of g.list()) n.push(Se(o, e, t)); return n.push(i), it(n) })).catch((e => N(e, 8) ? e : Promise.reject(e))) } function V(e, t, n) { for (const o of y.list()) o(e, t, n) } function B(e, t, o, a, i) { const s = A(e, t); if (s) return s; const c = t === I, l = n ? history.state : {}; o && (a || c ? p.replace(e.fullPath, r({ scroll: c && l && l.scroll }, i)) : p.push(e.fullPath, i)), b.value = e, J(e, t, o, c), z() } let W; function q() { W || (W = p.listen(((e, t, o) => { if (!ee.listening) return; const a = R(e), s = T(a); if (s) return void M(r(s, { replace: !0 }), a).catch(i); w = a; const c = b.value; var l, u; n && (l = E(c.fullPath, o.delta), u = $(), P.set(l, u)), D(a, c).catch((e => N(e, 12) ? e : N(e, 2) ? (M(e.to, a).then((e => { N(e, 20) && !o.delta && o.type === v.pop && p.go(-1, !1) })).catch(i), Promise.reject()) : (o.delta && p.go(-o.delta, !1), H(e, a, c)))).then((e => { (e = e || B(a, c, !1)) && (o.delta ? p.go(-o.delta, !1) : o.type === v.pop && N(e, 20) && p.go(-1, !1)), V(a, c, e) })).catch(i) }))) } let G, F = Re(), K = Re(); function H(e, t, n) { z(e); const o = K.list(); return o.length ? o.forEach((o => o(e, t, n))) : (c("uncaught error during route navigation:"), console.error(e)), Promise.reject(e) } function z(e) { return G || (G = !e, q(), F.list().forEach((([t, n]) => e ? n(e) : t())), F.reset()), e } function J(o, r, a, i) { const { scrollBehavior: s } = e; if (!n || !s) return Promise.resolve(); const c = !a && function (e) { const t = P.get(e); return P.delete(e), t }(E(o.fullPath, 0)) || (i || !a) && history.state && history.state.scroll || null; return t.nextTick().then((() => s(o, r, c))).then((e => e && k(e))).catch((e => H(e, o, r))) } const Y = e => p.go(e); let X; const Z = new Set, ee = { currentRoute: b, listening: !0, addRoute: function (e, t) { let n, r; return S(e) ? (n = o.getRecordMatcher(e), r = t) : r = e, o.addRoute(r, n) }, removeRoute: function (e) { const t = o.getRecordMatcher(e); t ? o.removeRoute(t) : c(`Cannot remove non-existent route "${String(e)}"`) }, hasRoute: function (e) { return !!o.getRecordMatcher(e) }, getRoutes: function () { return o.getRoutes().map((e => e.record)) }, resolve: R, options: e, push: j, replace: function (e) { return j(r(x(e), { replace: !0 })) }, go: Y, back: () => Y(-1), forward: () => Y(1), beforeEach: m.add, beforeResolve: g.add, afterEach: y.add, onError: K.add, isReady: function () { return G && b.value !== I ? Promise.resolve() : new Promise(((e, t) => { F.add([e, t]) })) }, install(e) { const r = this; e.component("RouterLink", je), e.component("RouterView", Me), e.config.globalProperties.$router = r, Object.defineProperty(e.config.globalProperties, "$route", { enumerable: !0, get: () => t.unref(b) }), n && !X && b.value === I && (X = !0, j(p.location).catch((e => { c("Unexpected error when starting the router:", e) }))); const a = {}; for (const e in I) a[e] = t.computed((() => b.value[e])); e.provide(Pe, r), e.provide(Ce, t.reactive(a)), e.provide(Oe, b); const i = e.unmount; Z.add(e), e.unmount = function () { Z.delete(e), Z.size < 1 && (w = I, W && W(), W = null, b.value = I, X = !1, G = !1), i() }, n && He(e, r, o) } }; return ee }, e.createRouterMatcher = Q, e.createWebHashHistory = function (e) { return (e = location.host ? e || location.pathname + location.search : "").includes("#") || (e += "#"), e.endsWith("#/") || e.endsWith("#") || c(`A hash base must end with a "#":\n"${e}" should be "${e.replace(/#.*$/, "#")}".`), x(e) }, e.createWebHistory = x, e.isNavigationFailure = N, e.loadRouteLocation = function (e) { return e.matched.every((e => e.redirect)) ? Promise.reject(new Error("Cannot load a route that redirects.")) : Promise.all(e.matched.map((e => e.components && Promise.all(Object.keys(e.components).reduce(((t, n) => { const r = e.components[n]; return "function" != typeof r || "displayName" in r || t.push(r().then((t => { if (!t) return Promise.reject(new Error(`Couldn't resolve component "${n}" at "${e.path}". Ensure you passed a function that returns a promise.`)); const r = o(t) ? t.default : t; e.components[n] = r }))), t }), []))))).then((() => e)) }, e.matchedRouteKey = ke, e.onBeforeRouteLeave = function (e) { if (!t.getCurrentInstance()) return void c("getCurrentInstance() returned null. onBeforeRouteLeave() must be called at the top of a setup function"); const n = t.inject(ke, {}).value; n ? xe(n, "leaveGuards", e) : c("No active route record was found when calling `onBeforeRouteLeave()`. Make sure you call this function inside of a component child of <router-view>. Maybe you called it inside of App.vue?") }, e.onBeforeRouteUpdate = function (e) { if (!t.getCurrentInstance()) return void c("getCurrentInstance() returned null. onBeforeRouteUpdate() must be called at the top of a setup function"); const n = t.inject(ke, {}).value; n ? xe(n, "updateGuards", e) : c("No active route record was found when calling `onBeforeRouteUpdate()`. Make sure you call this function inside of a component child of <router-view>. Maybe you called it inside of App.vue?") }, e.parseQuery = we, e.routeLocationKey = Ce, e.routerKey = Pe, e.routerViewLocationKey = Oe, e.stringifyQuery = _e, e.useLink = Ae, e.useRoute = function () { return t.inject(Ce) }, e.useRouter = function () { return t.inject(Pe) }, e.viewDepthKey = Ee, Object.defineProperty(e, "__esModule", { value: !0 }), e }({}, Vue);